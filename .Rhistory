install.packages("tidyverse")
install.packages(
c("arrow", "babynames", "curl", "duckdb", "gapminder",
"ggrepel", "ggridges", "ggthemes", "hexbin", "janitor", "Lahman",
"leaflet", "maps", "nycflights13", "openxlsx", "palmerpenguins",
"repurrrsive", "tidymodels", "writexl")
)
library(nycflights13)
library(tidyverse)
?flights
print(flights, width = Inf) #show all columns
glimpse(flights)
changes
#filter()
#filter() allows you to keep rows based on the values of the columns
flights |>   filter(dep_delay > 120) #flights that departed more than 120 minutes (two hours) late
#filter()
#filter() allows you to keep rows based on the values of the columns
flights |>   filter(dep_delay > 120) #flights that departed more than 120 minutes (two hours) late
#filter()
#filter() allows you to keep rows based on the values of the columns
flights |>   filter(dep_delay > 120) #flights that departed more than 120 minutes (two hours) late
# Flights that departed on January 1
abc<-flights |>
filter(month == 1 & day == 1)
# Flights that departed in January or February
flights |>
filter(month == 1 | month == 2)
?count
view(flights)
source("~/.active-rstudio-document", echo=TRUE)
flights |>
mutate(
gain = dep_delay - arr_delay
)
flights |>
mutate(
gain = dep_delay - arr_delay |> view()
)
flights |>
mutate(
gain = dep_delay - arr_delay
) |> view()
flights |>
mutate(
gain = dep_delay - arr_delay
) |> view()
flights |>
mutate(
gain = dep_delay - arr_delay,
speed = distance / air_time*60,
) |> view()
flights |>
mutate(
gain = dep_delay - arr_delay,
speed = distance / air_time*60,
.before = year
) |> view()
flights |>
mutate(
gain = dep_delay - arr_delay,
speed = distance / air_time*60,
.after = day
) |> view()
flights |>
select(year:day)
?who2
view(who2)
library(tidyverse)
view(who2)
who2 |>
pivot_longer(
cols = !family,
names_to = c(".value", "child"),
names_sep = "_",
values_drop_na = TRUE
)
detach("package:tidyr", unload = TRUE)
library(tidyr)
detach("package:tidyverse", unload = TRUE)
library(tidyverse)
who2 |>
pivot_longer(
cols = !family,
names_to = c(".value", "child"),
names_sep = "_",
values_drop_na = TRUE
)
library(tidyverse)
library(nycflights13)
airlines
flights
weather
airports
view(flights)
plains |>
count(tailnum) |>
filter(n>1)
planes |>
count(tailnum) |>
filter(n>1)
weather |>
count(time_hour, origin) |>
filter(n > 1)
planes |> filter(is.na(tailnum))
weather |> filter(is.na(time_hour) | (is.na(origin)))
weather |> filter(is.na(time_hour) | (is.na(origin))
flights2
flights2 <- flights |>
mutate(row_number(), .before = 1)
flights2
flights2
flights2 <- flights |>
select(year, time_hour, origin, dest, tailnum, carrier)
view(flights2)
flights2 |>
left_join(airlines)
flights2 |>
left_join(weather |> select(origin, time_hour, temp, wind_speed))
view(flights)
view(flights2)
planes |>
filter(tailnum == "N3ALAA")
flights2 |>
filter(tailnum == "N3ALAA") |>
left_join(planes |> select(tailnum, type, engines, seats))
flights2 |>
filter(tailnum == "N3ALAA") |>
left_join(planes |> select(tailnum, type, engines, seats))
flights2 |>
flights2 |>
left_join(planes)
library(readxl)
Sample_data <- read_excel("MPBA507_P1/Data/Sample_data.xlsx",
sheet = "Sheet2")
View(Sample_data)
weather |> filter(is.na(time_hour) | (is.na(origin))
flights2 <- flights |>
flights2
view(flights2)
library(readxl)
data <- read_excel("C:\Users\krati\Downloads\Stats Quiz (Responses) - Form Responses 1.csv")
data <- read_excel("C:\Users\krati\Downloads\Stats Quiz (Responses).xlsx")
data <- read_excel("C:\Users\krati\Desktop\New folder\Stats Quiz (Responses).xlsx")
install.packages("shinythemes")
install.packages("forecast")
install.packages("DT")
shiny::runApp('Air')
library(readxl)
dataset <- read_excel(NULL)
library(readxl)
dataset <- read_excel(NULL)
library(readxl)
dataset <- read_excel(NULL)
shiny::runApp('Air')
runApp('Air')
runApp('Air')
runApp('Air')
runApp('Air')
runApp()
runApp('Air')
runApp('Air')
runApp('Air')
runApp('Air')
runApp('Air')
setwd("C:/Users/krati/Documents/AirlinePricePredictor")
library(shiny); runApp('FlightPricePredictor_RShinyApp.R')
shiny::runApp()
